name: Automated tests

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: second_test
        type: choice
        options:
          - first_test
          - second_test

permissions:
  contents: read
  actions: read
  pages: write
  id-token: write

jobs:
  download-history:
    runs-on: ubuntu-latest
    name: Download history
    steps:
      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Install jq
        run: sudo apt-get install -y jq
      - run: |
          echo "Fetching allure-results artifact ID..."
          response=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          "https://api.github.com/repos/ReckeYi/Github_Automated_test/actions/artifacts?name=allure-results")
          echo "Response: $response"
          ARTIFACT_ID=$(echo $response | jq -r '.artifacts[0].id')
          if [ -z "$ARTIFACT_ID" ]; then
            echo "Artifact not found"
            exit 1
          fi
          echo "Artifact ID: $ARTIFACT_ID"
          curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          "https://api.github.com/repos/ReckeYi/Github_Automated_test/actions/artifacts/$ARTIFACT_ID/zip" \
          -o artifacts.zip
          ls -lh
          unzip -l artifacts.zip
          unzip artifacts.zip -d allure-results || exit 1
      - run: |
          echo "Fetching github-pages artifact ID..."
          response=$(curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "X-GitHub-Api-Version: 2022-11-28" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          "https://api.github.com/repos/ReckeYi/Github_Automated_test/actions/artifacts?name=github-pages")
          echo "Response: $response"
          REPORT_ID=$(echo $response | jq -r '.artifacts[0].id')
          if [ -z "$REPORT_ID" ]; then
            echo "Report artifact not found"
            exit 1
          fi
          echo "Report ID: $REPORT_ID"
          curl -L \
          -H "Accept: application/vnd.github+json" \
          -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
          "https://api.github.com/repos/ReckeYi/Github_Automated_test/actions/artifacts/$REPORT_ID/zip" \
          -o pages.zip
      - run: mkdir allure-results && unzip artifacts.zip -d allure-results
      - run: mkdir old_pages pages_history && unzip pages.zip -d old_pages && tar -xvf old_pages/artifact.tar -C pages_history
      - run: cp pages_history/history/* allure-results && cp -r pages_history/history allure-results
      - name: Store allure history
        uses: actions/upload-artifact@v3
        with:
          name: allure-results
          path:
            allure-results
          retention-days: 1
